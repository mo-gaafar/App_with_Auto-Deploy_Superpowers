---
- name: "configuration play."
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 100 seconds for target connection to become reachable/usable."
      wait_for_connection:
        delay: 10
        timeout: 100
      # Your code here

    - name: "install python for Ansible."
      #installing python for Ansible
        hosts: python
        become: true  
          apt:
            name: ["python3"]
            state: latest
            update_cache: yes

  # Get the environment variables from CircleCI and add to the EC2 instance
  # - `ENVIRONMENT`=`production`
  #         - `TYPEORM_CONNECTION`=`postgres`
  #         - `TYPEORM_ENTITIES`=`./modules/domain/**/*.entity{.ts,.js}`
  #         - `TYPEORM_HOST`={your postgres database hostname in RDS}
  #         - `TYPEORM_PORT`=`5532` (or the port from RDS if itâ€™s different)
  #         - `TYPEORM_USERNAME`={your postgres database username in RDS}
  #         - `TYPEORM_PASSWORD`={your postgres database password in RDS}
  #         - `TYPEORM_DATABASE`={your postgres database name in RDS}
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"

    # Add more env vars here

  roles:
    - configure-server
    - configure-prometheus-node-exporter

    # Your code here
